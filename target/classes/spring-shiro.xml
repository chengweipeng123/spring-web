<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="userRealm" class="filter.ShiroRealm"/>
    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <!-- 需要使用cache的话加上这句 -->
        <!--<property name="cacheManager" ref="shiroEhcacheManager" />-->
    </bean>

    <!-- 需要使用cache的话加上这句 -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:spring-shiro-ehcache.xml"/>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="filter.UserFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
    </bean>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>               <!--登录的 URL-->
        <property name="successUrl" value="/success" />          <!--登录成功的 URL-->
        <property name="unauthorizedUrl" value="/unauthorized"/> <!--无权访问的 URL-->
        <property name="filters">
            <util:map>
                <!--使用我们自定义的登录逻辑，为了支持AJAX请求-->
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!--权限控制
                    anon: 不需要权限就能访问
                    logout: 注销
                    authc: 需要登录后才能访问，但不限制权限
                    authc, roles[Admin]: 必须是 Admin 权限才能访问
                -->

                /index = anon
                /unauthorized = anon
                /login = authc
                /rest = authc
                /logout = logout
                /admin = authc, roles[Admin]
                /register = authc, roles[Register]
            </value>
        </property>
    </bean>
</beans>